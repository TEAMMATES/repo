// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InstructorCoursesPageComponent should snap when archived courses are expanded 1`] = `
<tm-instructor-courses-page
  CourseEditFormMode={[Function Object]}
  SortBy={[Function Object]}
  SortOrder={[Function Object]}
  __ngContext__={[Function Number]}
  activeCourses={[Function Array]}
  activeCoursesList={[Function Array]}
  activeCoursesSortableTable={[Function Object]}
  activeTableSortBy={[Function Number]}
  activeTableSortOrder={[Function Number]}
  allCoursesList={[Function Array]}
  archivedCourses={[Function Array]}
  archivedCoursesSortableTable={[Function Object]}
  archivedTableSortBy={[Function Number]}
  archivedTableSortOrder={[Function Number]}
  canDeleteAll={[Function Boolean]}
  canRestoreAll={[Function Boolean]}
  copyProgressPercentage="0"
  courseAdded={[Function EventEmitter_]}
  courseFormModel={[Function Object]}
  courseService={[Function CourseService]}
  courseStats={[Function Object]}
  datePipe={[Function DatePipe]}
  deletedCoursesSortableTable={[Function Object]}
  deletedTableSortBy={[Function Number]}
  deletedTableSortOrder={[Function Number]}
  feedbackSessionsService={[Function FeedbackSessionsService]}
  hasLoadingFailed="false"
  isAddNewCourseFormExpanded="false"
  isArchivedCourseExpanded={[Function Boolean]}
  isCopyingCourse="false"
  isLoading={[Function Boolean]}
  isRecycleBinExpanded="false"
  modifiedSessions={[Function Object]}
  modifiedTimestampsModal={[Function TemplateRef2]}
  ngbModal={[Function NgbModal]}
  numberOfSessionsCopied="0"
  progressBarService={[Function ProgressBarService]}
  resetCourseForm={[Function EventEmitter_]}
  route={[Function ActivatedRoute]}
  simpleModalService={[Function SimpleModalService]}
  softDeletedCourses={[Function Array]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
  totalNumberOfSessionsToCopy="0"
>
  <div>
    <button
      class="btn btn-success"
      disabled=""
      id="btn-add-course"
    >
      <i
        class="fas fa-plus"
      />
       Add New Course 
    </button>
  </div><tm-loading-retry>
    <tm-loading-spinner>
      <div
        class="loading-container"
      >
        <div
          class="row spinner-border text-primary"
          role="status"
        />
        <div
          class="row text-secondary"
        >
          Loading...
        </div>
      </div>
    </tm-loading-spinner>
  </tm-loading-retry><div
    class="course-section"
  >
    <h2
      class="h3 text-muted"
    >
      <span
        aria-hidden="true"
        class="fa fa-file-archive"
      />
       Archived courses 
    </h2>
    <div
      class="card top-padded"
    >
      <div
        class="card-header bg-info cursor-pointer"
        id="archived-table-heading"
      >
        <b>
          Archive
        </b>
        <div
          class="card-header-btn-toolbar"
        >
          <tm-panel-chevron>
            <div
              class="chevron"
            >
              <i
                class="fas fa-chevron-up"
              />
            </div>
          </tm-panel-chevron>
        </div>
      </div>
      <div
        class="card-body archive-body table-responsive ng-trigger ng-trigger-collapseAnim ng-animating"
        style=""
      >
        <tm-sortable-table />
      </div>
    </div>
  </div>
</tm-instructor-courses-page>
`;

exports[`InstructorCoursesPageComponent should snap when courses are still loading 1`] = `
<tm-instructor-courses-page
  CourseEditFormMode={[Function Object]}
  SortBy={[Function Object]}
  SortOrder={[Function Object]}
  __ngContext__={[Function Number]}
  activeCourses={[Function Array]}
  activeCoursesList={[Function Array]}
  activeCoursesSortableTable={[Function Object]}
  activeTableSortBy={[Function Number]}
  activeTableSortOrder={[Function Number]}
  allCoursesList={[Function Array]}
  archivedCourses={[Function Array]}
  archivedCoursesSortableTable={[Function Object]}
  archivedTableSortBy={[Function Number]}
  archivedTableSortOrder={[Function Number]}
  canDeleteAll={[Function Boolean]}
  canRestoreAll={[Function Boolean]}
  copyProgressPercentage="0"
  courseAdded={[Function EventEmitter_]}
  courseFormModel={[Function Object]}
  courseService={[Function CourseService]}
  courseStats={[Function Object]}
  datePipe={[Function DatePipe]}
  deletedCoursesSortableTable={[Function Object]}
  deletedTableSortBy={[Function Number]}
  deletedTableSortOrder={[Function Number]}
  feedbackSessionsService={[Function FeedbackSessionsService]}
  hasLoadingFailed="false"
  isAddNewCourseFormExpanded="false"
  isArchivedCourseExpanded="false"
  isCopyingCourse="false"
  isLoading={[Function Boolean]}
  isRecycleBinExpanded="false"
  modifiedSessions={[Function Object]}
  modifiedTimestampsModal={[Function TemplateRef2]}
  ngbModal={[Function NgbModal]}
  numberOfSessionsCopied="0"
  progressBarService={[Function ProgressBarService]}
  resetCourseForm={[Function EventEmitter_]}
  route={[Function ActivatedRoute]}
  simpleModalService={[Function SimpleModalService]}
  softDeletedCourses={[Function Array]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
  totalNumberOfSessionsToCopy="0"
>
  <div>
    <button
      class="btn btn-success"
      disabled=""
      id="btn-add-course"
    >
      <i
        class="fas fa-plus"
      />
       Add New Course 
    </button>
  </div><tm-loading-retry>
    <tm-loading-spinner>
      <div
        class="loading-container"
      >
        <div
          class="row spinner-border text-primary"
          role="status"
        />
        <div
          class="row text-secondary"
        >
          Loading...
        </div>
      </div>
    </tm-loading-spinner>
  </tm-loading-retry>
</tm-instructor-courses-page>
`;

exports[`InstructorCoursesPageComponent should snap when it is undeletable and unrestorable 1`] = `
<tm-instructor-courses-page
  CourseEditFormMode={[Function Object]}
  SortBy={[Function Object]}
  SortOrder={[Function Object]}
  __ngContext__={[Function Number]}
  activeCourses={[Function Array]}
  activeCoursesList={[Function Array]}
  activeCoursesSortableTable={[Function Object]}
  activeTableSortBy={[Function Number]}
  activeTableSortOrder={[Function Number]}
  allCoursesList={[Function Array]}
  archivedCourses={[Function Array]}
  archivedCoursesSortableTable={[Function Object]}
  archivedTableSortBy={[Function Number]}
  archivedTableSortOrder={[Function Number]}
  canDeleteAll="false"
  canRestoreAll="false"
  copyProgressPercentage="0"
  courseAdded={[Function EventEmitter_]}
  courseFormModel={[Function Object]}
  courseService={[Function CourseService]}
  courseStats={[Function Object]}
  datePipe={[Function DatePipe]}
  deletedCoursesSortableTable={[Function Object]}
  deletedTableSortBy={[Function Number]}
  deletedTableSortOrder={[Function Number]}
  feedbackSessionsService={[Function FeedbackSessionsService]}
  hasLoadingFailed="false"
  isAddNewCourseFormExpanded="false"
  isArchivedCourseExpanded="false"
  isCopyingCourse="false"
  isLoading="false"
  isRecycleBinExpanded="false"
  modifiedSessions={[Function Object]}
  modifiedTimestampsModal={[Function TemplateRef2]}
  ngbModal={[Function NgbModal]}
  numberOfSessionsCopied="0"
  progressBarService={[Function ProgressBarService]}
  resetCourseForm={[Function EventEmitter_]}
  route={[Function ActivatedRoute]}
  simpleModalService={[Function SimpleModalService]}
  softDeletedCourses={[Function Array]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
  totalNumberOfSessionsToCopy="0"
>
  <div>
    <button
      class="btn btn-success"
      id="btn-add-course"
    >
      <i
        class="fas fa-plus"
      />
       Add New Course 
    </button>
  </div><tm-loading-retry>
    <div>
      <div
        class="course-section"
      >
        <h2
          class="h3"
        >
          Active courses
        </h2>
        <tm-sortable-table />
      </div>
    </div>
  </tm-loading-retry><div
    class="course-section"
  >
    <h2
      class="h3 text-muted"
    >
      <span
        aria-hidden="true"
        class="fa fa-file-archive"
      />
       Archived courses 
    </h2>
    <div
      class="card top-padded"
    >
      <div
        class="card-header bg-info cursor-pointer"
        id="archived-table-heading"
      >
        <b>
          Archive
        </b>
        <div
          class="card-header-btn-toolbar"
        >
          <tm-panel-chevron>
            <div
              class="chevron"
            >
              <i
                class="fas fa-chevron-down"
              />
            </div>
          </tm-panel-chevron>
        </div>
      </div>
    </div>
  </div><div
    class="row course-section margin-top-30px"
  >
    <div
      class="col-12"
    >
      <h2
        class="h3 text-muted"
      >
        <span
          aria-hidden="true"
          class="fa fa-trash-alt"
        />
         Deleted courses 
      </h2>
      <div
        class="card bg-light top-padded"
      >
        <div
          class="card-header bg-secondary text-white cursor-pointer"
          id="deleted-table-heading"
        >
          <b>
            Recycle Bin
          </b>
          <div
            class="card-header-btn-toolbar"
          >
            <button
              class="btn btn-secondary btn-sm disabled"
            >
              <i
                aria-hidden="true"
                class="fas fa-check"
              />
               Restore All 
            </button>
            <button
              class="btn btn-secondary btn-sm disabled"
            >
              <i
                aria-hidden="true"
                class="fas fa-times"
              />
               Delete All 
            </button>
            <tm-panel-chevron>
              <div
                class="chevron"
              >
                <i
                  class="fas fa-chevron-down"
                />
              </div>
            </tm-panel-chevron>
          </div>
        </div>
      </div>
    </div>
  </div>
</tm-instructor-courses-page>
`;

exports[`InstructorCoursesPageComponent should snap when new course form is expanded 1`] = `
<tm-instructor-courses-page
  CourseEditFormMode={[Function Object]}
  SortBy={[Function Object]}
  SortOrder={[Function Object]}
  __ngContext__={[Function Number]}
  activeCourses={[Function Array]}
  activeCoursesList={[Function Array]}
  activeCoursesSortableTable={[Function Object]}
  activeTableSortBy={[Function Number]}
  activeTableSortOrder={[Function Number]}
  allCoursesList={[Function Array]}
  archivedCourses={[Function Array]}
  archivedCoursesSortableTable={[Function Object]}
  archivedTableSortBy={[Function Number]}
  archivedTableSortOrder={[Function Number]}
  canDeleteAll={[Function Boolean]}
  canRestoreAll={[Function Boolean]}
  copyProgressPercentage="0"
  courseAdded={[Function EventEmitter_]}
  courseFormModel={[Function Object]}
  courseService={[Function CourseService]}
  courseStats={[Function Object]}
  datePipe={[Function DatePipe]}
  deletedCoursesSortableTable={[Function Object]}
  deletedTableSortBy={[Function Number]}
  deletedTableSortOrder={[Function Number]}
  feedbackSessionsService={[Function FeedbackSessionsService]}
  hasLoadingFailed="false"
  isAddNewCourseFormExpanded={[Function Boolean]}
  isArchivedCourseExpanded="false"
  isCopyingCourse="false"
  isLoading="false"
  isRecycleBinExpanded="false"
  modifiedSessions={[Function Object]}
  modifiedTimestampsModal={[Function TemplateRef2]}
  ngbModal={[Function NgbModal]}
  numberOfSessionsCopied="0"
  progressBarService={[Function ProgressBarService]}
  resetCourseForm={[Function EventEmitter_]}
  route={[Function ActivatedRoute]}
  simpleModalService={[Function SimpleModalService]}
  softDeletedCourses={[Function Array]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
  totalNumberOfSessionsToCopy="0"
>
  <div>
    <button
      class="btn btn-success"
      disabled=""
      id="btn-add-course"
    >
      <i
        class="fas fa-plus"
      />
       Add New Course 
    </button>
  </div><div
    class="course-section ng-trigger ng-trigger-collapseAnim ng-animating"
    id="add-course-section"
    style=""
  >
    <tm-course-edit-form>
      <div
        class="card"
      >
        <div
          class="card-header bg-primary text-white add-mode"
        >
          <strong
            style=""
          >
            Create a new Course
          </strong>
          <div
            class="card-header-btn-toolbar"
          >
            <button
              class="btn btn-primary btn-sm"
              disabled=""
              id="btn-copy-course"
              style=""
            >
              <i
                aria-hidden="true"
                class="fa fa-copy"
              />
               Copy from previous courses 
            </button>
            <button
              class="btn btn-primary btn-sm"
              id="btn-close-form"
              style=""
            >
              <i
                aria-hidden="true"
                class="fa fa-times"
              />
            </button>
          </div>
        </div>
        <div
          class="card-body fill-plain"
        >
          <form
            class="ng-untouched ng-pristine ng-valid"
            novalidate=""
          >
            <div
              class="row form-group"
            >
              <label
                class="col-sm-2 fw-bold text-md-end"
                for="course-id"
              >
                Course ID:
              </label>
              <div
                class="col-sm-9"
              >
                <input
                  class="col-xs-12 form-control ng-untouched ng-pristine ng-valid"
                  id="course-id"
                  maxlength="64"
                  name="courseId"
                  placeholder="e.g. CS3215-2013Semester1"
                  required=""
                  type="text"
                />
                <div
                  class="invalid-field"
                  hidden=""
                >
                  <i
                    aria-hidden="true"
                    class="fa fa-exclamation-circle"
                  />
                   The field Course ID should not be empty. 
                </div>
              </div>
            </div>
            <div
              class="row form-group"
            >
              <label
                class="col-sm-2 fw-bold text-md-end"
                for="course-name"
              >
                Course Name:
              </label>
              <div
                class="col-sm-9"
              >
                <input
                  class="form-control ng-untouched ng-pristine ng-valid"
                  id="course-name"
                  maxlength="80"
                  name="courseName"
                  placeholder="e.g. Software Engineering"
                  required=""
                  type="text"
                />
                <div
                  class="invalid-field"
                  hidden=""
                >
                  <i
                    aria-hidden="true"
                    class="fa fa-exclamation-circle"
                  />
                   The field Course Name should not be empty. 
                </div>
              </div>
            </div>
            <div
              class="row form-group"
            >
              <label
                class="col-sm-2 fw-bold text-md-end"
                for="course-institute"
              >
                <span
                  class="ngb-tooltip-class"
                  ngbtooltip="Note that you can only create a new course under an institute in which you are already a course co-owner."
                  style=""
                >
                   Course institute: 
                </span>
              </label>
              <div
                class="col-sm-9"
              >
                <select
                  class="col-xs-12 form-control form-select ng-untouched ng-pristine ng-valid"
                  id="course-institute"
                  name="institute"
                  required=""
                  type="text"
                >
                </select>
              </div>
            </div>
            <div
              class="row form-group"
            >
              <label
                class="col-xs-12 col-sm-2 fw-bold text-md-end"
                for="time-zone"
              >
                <span
                  class="ngb-tooltip-class"
                  ngbtooltip="You should not need to change this as it is auto-detected based on your
                  device settings. TEAMMATES automatically adjusts to match the current time offset in your area, including clock changes due to daylight saving time."
                >
                   Time Zone:
                </span>
              </label>
              <div
                class="col-xs-12 col-sm-9"
              >
                <div
                  class="input-group"
                >
                  <select
                    class="form-control form-select ng-untouched ng-pristine ng-valid"
                    id="time-zone"
                    name="timeZone"
                    required=""
                  >
                    <option
                      style=""
                      value="Jamaica"
                    >
                      Jamaica (UTC -05:00)
                    </option>
                    <option
                      style=""
                      value="Portugal"
                    >
                      Portugal (UTC)
                    </option>
                    <option
                      style=""
                      value="Singapore"
                    >
                      Singapore (UTC +08:00)
                    </option>
                    <option
                      style=""
                      value="Turkey"
                    >
                      Turkey (UTC +03:00)
                    </option>
                  </select>
                  <span
                    class="input-group-btn"
                  >
                    <button
                      class="btn btn-primary"
                      type="button"
                    >
                       Auto-Detect 
                    </button>
                  </span>
                </div>
              </div>
            </div>
            <div
              class="form-group m-0"
            >
              <div
                class="col-sm-12 text-center"
              >
                <button
                  class="btn btn-success"
                  disabled=""
                  id="btn-submit-course"
                  style=""
                  type="submit"
                >
                   Add Course 
                </button>
              </div>
            </div>
          </form>
        </div>
      </div>
    </tm-course-edit-form>
  </div><tm-loading-retry>
    <div>
      <div
        class="alert alert-warning margin-top-30px"
        role="alert"
      >
         You do not seem to have any active courses. Use the button above to create a new course. 
      </div>
    </div>
  </tm-loading-retry>
</tm-instructor-courses-page>
`;

exports[`InstructorCoursesPageComponent should snap with all courses in course stats 1`] = `
<tm-instructor-courses-page
  CourseEditFormMode={[Function Object]}
  SortBy={[Function Object]}
  SortOrder={[Function Object]}
  __ngContext__={[Function Number]}
  activeCourses={[Function Array]}
  activeCoursesList={[Function Array]}
  activeCoursesSortableTable={[Function Object]}
  activeTableSortBy={[Function Number]}
  activeTableSortOrder={[Function Number]}
  allCoursesList={[Function Array]}
  archivedCourses={[Function Array]}
  archivedCoursesSortableTable={[Function Object]}
  archivedTableSortBy={[Function Number]}
  archivedTableSortOrder={[Function Number]}
  canDeleteAll={[Function Boolean]}
  canRestoreAll={[Function Boolean]}
  copyProgressPercentage="0"
  courseAdded={[Function EventEmitter_]}
  courseFormModel={[Function Object]}
  courseService={[Function CourseService]}
  courseStats={[Function Object]}
  datePipe={[Function DatePipe]}
  deletedCoursesSortableTable={[Function Object]}
  deletedTableSortBy={[Function Number]}
  deletedTableSortOrder={[Function Number]}
  feedbackSessionsService={[Function FeedbackSessionsService]}
  hasLoadingFailed="false"
  isAddNewCourseFormExpanded="false"
  isArchivedCourseExpanded="false"
  isCopyingCourse="false"
  isLoading="false"
  isRecycleBinExpanded="false"
  modifiedSessions={[Function Object]}
  modifiedTimestampsModal={[Function TemplateRef2]}
  ngbModal={[Function NgbModal]}
  numberOfSessionsCopied="0"
  progressBarService={[Function ProgressBarService]}
  resetCourseForm={[Function EventEmitter_]}
  route={[Function ActivatedRoute]}
  simpleModalService={[Function SimpleModalService]}
  softDeletedCourses={[Function Array]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
  totalNumberOfSessionsToCopy="0"
>
  <div>
    <button
      class="btn btn-success"
      id="btn-add-course"
    >
      <i
        class="fas fa-plus"
      />
       Add New Course 
    </button>
  </div><tm-loading-retry>
    <div>
      <div
        class="course-section"
      >
        <h2
          class="h3"
        >
          Active courses
        </h2>
        <tm-sortable-table />
      </div>
    </div>
  </tm-loading-retry><div
    class="course-section"
  >
    <h2
      class="h3 text-muted"
    >
      <span
        aria-hidden="true"
        class="fa fa-file-archive"
      />
       Archived courses 
    </h2>
    <div
      class="card top-padded"
    >
      <div
        class="card-header bg-info cursor-pointer"
        id="archived-table-heading"
      >
        <b>
          Archive
        </b>
        <div
          class="card-header-btn-toolbar"
        >
          <tm-panel-chevron>
            <div
              class="chevron"
            >
              <i
                class="fas fa-chevron-down"
              />
            </div>
          </tm-panel-chevron>
        </div>
      </div>
    </div>
  </div><div
    class="row course-section margin-top-30px"
  >
    <div
      class="col-12"
    >
      <h2
        class="h3 text-muted"
      >
        <span
          aria-hidden="true"
          class="fa fa-trash-alt"
        />
         Deleted courses 
      </h2>
      <div
        class="card bg-light top-padded"
      >
        <div
          class="card-header bg-secondary text-white cursor-pointer"
          id="deleted-table-heading"
        >
          <b>
            Recycle Bin
          </b>
          <div
            class="card-header-btn-toolbar"
          >
            <button
              class="btn btn-secondary btn-sm"
              id="btn-restore-all"
              ngbtooltip="Restore all deleted courses and their corresponding students and sessions"
            >
              <i
                aria-hidden="true"
                class="fas fa-check"
              />
               Restore All 
            </button>
            <button
              class="btn btn-secondary btn-sm"
              id="btn-delete-all"
              ngbtooltip="Permanently delete all courses and their corresponding students and sessions"
            >
              <i
                aria-hidden="true"
                class="fas fa-times"
              />
               Delete All 
            </button>
            <tm-panel-chevron>
              <div
                class="chevron"
              >
                <i
                  class="fas fa-chevron-down"
                />
              </div>
            </tm-panel-chevron>
          </div>
        </div>
      </div>
    </div>
  </div>
</tm-instructor-courses-page>
`;

exports[`InstructorCoursesPageComponent should snap with default fields 1`] = `
<tm-instructor-courses-page
  CourseEditFormMode={[Function Object]}
  SortBy={[Function Object]}
  SortOrder={[Function Object]}
  __ngContext__={[Function Number]}
  activeCourses={[Function Array]}
  activeCoursesList={[Function Array]}
  activeCoursesSortableTable={[Function Object]}
  activeTableSortBy={[Function Number]}
  activeTableSortOrder={[Function Number]}
  allCoursesList={[Function Array]}
  archivedCourses={[Function Array]}
  archivedCoursesSortableTable={[Function Object]}
  archivedTableSortBy={[Function Number]}
  archivedTableSortOrder={[Function Number]}
  canDeleteAll={[Function Boolean]}
  canRestoreAll={[Function Boolean]}
  copyProgressPercentage="0"
  courseAdded={[Function EventEmitter_]}
  courseFormModel={[Function Object]}
  courseService={[Function CourseService]}
  courseStats={[Function Object]}
  datePipe={[Function DatePipe]}
  deletedCoursesSortableTable={[Function Object]}
  deletedTableSortBy={[Function Number]}
  deletedTableSortOrder={[Function Number]}
  feedbackSessionsService={[Function FeedbackSessionsService]}
  hasLoadingFailed="false"
  isAddNewCourseFormExpanded="false"
  isArchivedCourseExpanded="false"
  isCopyingCourse="false"
  isLoading={[Function Boolean]}
  isRecycleBinExpanded="false"
  modifiedSessions={[Function Object]}
  modifiedTimestampsModal={[Function TemplateRef2]}
  ngbModal={[Function NgbModal]}
  numberOfSessionsCopied="0"
  progressBarService={[Function ProgressBarService]}
  resetCourseForm={[Function EventEmitter_]}
  route={[Function ActivatedRoute]}
  simpleModalService={[Function SimpleModalService]}
  softDeletedCourses={[Function Array]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
  totalNumberOfSessionsToCopy="0"
>
  <div>
    <button
      class="btn btn-success"
      disabled=""
      id="btn-add-course"
    >
      <i
        class="fas fa-plus"
      />
       Add New Course 
    </button>
  </div><tm-loading-retry>
    <tm-loading-spinner>
      <div
        class="loading-container"
      >
        <div
          class="row spinner-border text-primary"
          role="status"
        />
        <div
          class="row text-secondary"
        >
          Loading...
        </div>
      </div>
    </tm-loading-spinner>
  </tm-loading-retry>
</tm-instructor-courses-page>
`;

exports[`InstructorCoursesPageComponent should snap with no courses in course stats 1`] = `
<tm-instructor-courses-page
  CourseEditFormMode={[Function Object]}
  SortBy={[Function Object]}
  SortOrder={[Function Object]}
  __ngContext__={[Function Number]}
  activeCourses={[Function Array]}
  activeCoursesList={[Function Array]}
  activeCoursesSortableTable={[Function Object]}
  activeTableSortBy={[Function Number]}
  activeTableSortOrder={[Function Number]}
  allCoursesList={[Function Array]}
  archivedCourses={[Function Array]}
  archivedCoursesSortableTable={[Function Object]}
  archivedTableSortBy={[Function Number]}
  archivedTableSortOrder={[Function Number]}
  canDeleteAll={[Function Boolean]}
  canRestoreAll={[Function Boolean]}
  copyProgressPercentage="0"
  courseAdded={[Function EventEmitter_]}
  courseFormModel={[Function Object]}
  courseService={[Function CourseService]}
  courseStats={[Function Object]}
  datePipe={[Function DatePipe]}
  deletedCoursesSortableTable={[Function Object]}
  deletedTableSortBy={[Function Number]}
  deletedTableSortOrder={[Function Number]}
  feedbackSessionsService={[Function FeedbackSessionsService]}
  hasLoadingFailed="false"
  isAddNewCourseFormExpanded="false"
  isArchivedCourseExpanded="false"
  isCopyingCourse="false"
  isLoading="false"
  isRecycleBinExpanded="false"
  modifiedSessions={[Function Object]}
  modifiedTimestampsModal={[Function TemplateRef2]}
  ngbModal={[Function NgbModal]}
  numberOfSessionsCopied="0"
  progressBarService={[Function ProgressBarService]}
  resetCourseForm={[Function EventEmitter_]}
  route={[Function ActivatedRoute]}
  simpleModalService={[Function SimpleModalService]}
  softDeletedCourses={[Function Array]}
  statusMessageService={[Function StatusMessageService]}
  studentService={[Function StudentService]}
  timezoneService={[Function TimezoneService]}
  totalNumberOfSessionsToCopy="0"
>
  <div>
    <button
      class="btn btn-success"
      id="btn-add-course"
    >
      <i
        class="fas fa-plus"
      />
       Add New Course 
    </button>
  </div><tm-loading-retry>
    <div>
      <div
        class="course-section"
      >
        <h2
          class="h3"
        >
          Active courses
        </h2>
        <tm-sortable-table />
      </div>
    </div>
  </tm-loading-retry>
</tm-instructor-courses-page>
`;
